{"version":3,"sources":["../../../client/app/admin/admin.controller.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,UAAU,CAAC,WAAW,EAAE,UAAS,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE;;;AAGjF,QAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;;;AAG5B,QAAM,CAAC,KAAK,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;;AAE9C,QAAM,UAAO,GAAG,UAAS,IAAI,EAAC;AACjC,QAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AACxB,gBAAY,CAAC,SAAS,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE,KAAK,EAAE;AAC5D,UAAI,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;AAC5B,YAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAE7B,CAAC,CAAC;GACH,CAAA;;;;;;;;;AAUG,QAAM,CAAC,QAAQ,GAAG,UAAS,IAAI,EAAE;AAC/B,UAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,QAAI,IAAI,CAAC,MAAM,EAAE;AACf,UAAI,CAAC,aAAa,CAAC;AACjB,YAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI;AACtB,aAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK;AACxB,gBAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ;AAC9B,YAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI;OACvB,CAAC,CACD,IAAI,CAAC,YAAW;;AAEf,cAAM,CAAC,MAAM,EAAE,CAAC;OACjB,CAAC,CAAA;KACH;GACF,CAAC;;AAEF,QAAM,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE;;AAErC,QAAI,IAAI,CAAC,MAAM,EAAC;AACZ,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnB;GACF,CAAA;CAEF,CAAC,CAAC","file":"admin.controller.js","sourcesContent":["'use strict';\n\nangular.module('missioncontrolApp')\n  .controller('AdminCtrl', function($scope, $http, Auth, User, $state, modalService) {\n\n    // Use the User $resource to fetch all users\n    $scope.users = User.query();\n\n    //  TODO:  get list of roles from a database than create here on client side\n    $scope.roles = ['admin', 'standard', 'comms'];\n\n    $scope.delete = function(user){\n\tvar index = this.$index;\n\tmodalService.showModal({},{}).then(function (result, index) {\n\tUser.remove({id: user._id});\n\t$scope.users.splice(index, 1);\n\n\t});\n}\n\n   \n// $scope.delete = function(user) {\n//\tif ($window.confirm(\"do you want to delete?\")){\n//       User.remove({ id: user._id });\n//        $scope.users.splice(this.$index, 1);\n//}\n//};\n\n    $scope.register = function(form) {\n      $scope.submitted = true;\n      if (form.$valid) {\n        Auth.createNewUser({\n          name: $scope.user.name,\n          email: $scope.user.email,\n          password: $scope.user.password,\n          role: $scope.user.role\n        })\n        .then(function() {\n          // Account created, redirect to home\n          $state.reload();\n        })\n      }\n    };\n\n    $scope.assign = function(form, user) {\n\n    if (form.$valid){\n        User.update(user);\n      }\n    }\n\n  });\n"]}