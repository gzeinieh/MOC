{"version":3,"sources":["../../../client/app/allocator/allocator.controller.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,UAAU,CAAC,eAAe,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;;;;;;;;;AAOpD,OAAK,CAAC,GAAG,uBAAuB,CAC7B,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,UAAK,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;GACrC,CAAC,CAAC;;AAEL,OAAK,CAAC,GAAG,mBAAmB,CACzB,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,UAAK,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;GAC1C,CAAC,CAAC;;AAEL,MAAI,CAAC,WAAW,GAAG,SAAS,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE;;;AAChE,QAAI,SAAS,IAAI,aAAa,EAAE;AAC9B,WAAK,CAAC,GAAG,sBAAoB,SAAS,gCAA2B,aAAa,CAAG,CAC9E,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,eAAK,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;OAC/B,CAAC,CAAC;KACN;GACF,CAAC;;AAEF,MAAI,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,SAAS,EAAE,OAAO,EAAE;;;AAC9D,QAAI,SAAS,IAAI,OAAO,EAAE;AACxB,WAAK,CAAC,GAAG,oBAAkB,OAAO,EAAI;AACpC,uBAAe,EAAE,SAAS;OAC3B,CAAC,CACD,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,YAAI,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC/B,eAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;AAExB,YAAI,GAAG,GAAG,CAAC,CAAC,OAAK,QAAQ,CAAC,CACvB,SAAS,CAAC,UAAA,OAAO;iBAAI,OAAO,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG;SAAA,CAAC,CAAC;AACxD,eAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;OACjC,CAAC,CAAC;KACJ;GACF,CAAC;;AAEF,MAAI,CAAC,eAAe,GAAG,SAAS,eAAe,CAAC,OAAO,EAAE;;;AACvD,SAAK,CAAC,GAAG,oBAAkB,OAAO,EAAI;AACpC,qBAAe,EAAE,IAAI;KACtB,CAAC,CACD,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,UAAI,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC/B,aAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;AAExB,UAAI,GAAG,GAAG,CAAC,CAAC,OAAK,QAAQ,CAAC,CACvB,SAAS,CAAC,UAAA,OAAO;eAAI,OAAO,CAAC,GAAG,KAAK,UAAU,CAAC,GAAG;OAAA,CAAC,CAAC;AACxD,aAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;KACjC,CAAC,CAAC;GACJ,CAAC;CACH,CAAC,CAAC","file":"allocator.controller.js","sourcesContent":["'use strict';\r\n\r\nangular.module('missioncontrolApp')\r\n  .controller('AllocatorCtrl', function ($scope, $http) {\r\n    // $http.get(`/api/satellites/1/assignedSegments`)\r\n    //   .then((response) => {\r\n    //     console.log(response.data);\r\n    //     this.segments = response.data;\r\n    //   });\r\n\r\n    $http.get(`/api/groundstations`)\r\n      .then((response) => {\r\n        this.groundstations = response.data;\r\n      });\r\n\r\n    $http.get(`/api/satellites`)\r\n      .then((response) => {\r\n        this.availableSatellites = response.data;\r\n      });\r\n\r\n    this.getSegments = function getSegments(satellite, groundstation) {\r\n      if (satellite && groundstation) {\r\n        $http.get(`/api/satellites/${satellite}/segments?groundstation=${groundstation}`)\r\n          .then((response) => {\r\n            this.segments = response.data;\r\n          });\r\n      }\r\n    };\r\n\r\n    this.assignSegment = function assignSegment(satellite, segment) {\r\n      if (satellite && segment) {\r\n        $http.put(`/api/segments/${segment}`, {\r\n          assignedToSatId: satellite\r\n        })\r\n        .then((response) => {\r\n          let updatedSeg = response.data;\r\n          console.log(updatedSeg);\r\n\r\n          let idx = _(this.segments)\r\n            .findIndex(segment => segment._id === updatedSeg._id);\r\n          this.segments[idx] = updatedSeg;\r\n        });\r\n      }\r\n    };\r\n\r\n    this.unassignSegment = function unassignSegment(segment) {\r\n      $http.put(`/api/segments/${segment}`, {\r\n        assignedToSatId: null\r\n      })\r\n      .then((response) => {\r\n        let updatedSeg = response.data;\r\n        console.log(updatedSeg);\r\n\r\n        let idx = _(this.segments)\r\n          .findIndex(segment => segment._id === updatedSeg._id);\r\n        this.segments[idx] = updatedSeg;\r\n      });\r\n    };\r\n  });\r\n"]}