{"version":3,"sources":["../../../../client/app/commands/new/new.controller.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAChC,UAAU,CAAC,gBAAgB,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;;;AACrD,QAAM,CAAC,OAAO,GAAG,EAAE,CAAC;;AAIpB,OAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAC3B,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,UAAK,mBAAmB,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzC,QAAI,QAAQ,GAAG,MAAK,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAC3C,SAAK,CAAC,GAAG,sBAAoB,QAAQ,CAAC,GAAG,aAAU,CAClD,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,aAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC,CAAA;GACH,CAAC,CAAC;;AAEH,MAAI,CAAC,KAAK,GAAG,CACX,UAAU,EACV,cAAc,EACd,aAAa,CACd,CAAC;;AAEF,MAAI,CAAC,YAAY,GAAG;AAClB,cAAU,EAAE,CACV,SAAS,EACT,UAAU,CACX;AACD,kBAAc,EAAE,CACd,eAAe,CAChB;AACD,iBAAa,EAAE,CACb,WAAW,CACZ;GACF,CAAC;;AAEF,OAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAC9B,IAAI,CAAC,UAAC,QAAQ,EAAK;AAClB,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,UAAK,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;GACjC,CAAC,CAAC;;AAIH,QAAM,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,OAAO,EAAE;AACrD,WAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,SAAI,OAAO,CAAC,IAAI,AAAE,CAAC;AACjD,SAAK,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CACnC,IAAI,CAAC,UAAU,QAAQ,EAAE;AACxB,aAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KACvB,EACD,UAAU,GAAG,EAAE;AACb,aAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACpB,CAAC,CAAC;GACJ,CAAC;CAEH,CAAC,CAAC","file":"new.controller.js","sourcesContent":["'use strict';\n\nangular.module('missioncontrolApp')\n  .controller('NewCommandCtrl', function ($scope, $http) {\n    $scope.command = {};\n\n\n\n    $http.get('/api/satellites')\n    .then((response) => {\n      console.log(response);\n      this.availableSatellites = response.data;\n      let firstSat = this.availableSatellites[0];\n      $http.get(`/api/satellites/${firstSat._id}/passes`)\n      .then((response) => {\n        console.log(response.data);\n      })\n    });\n\n    this.units = [\n      'Attitude',\n      'Magnetometer',\n      'Photosensor'\n    ];\n\n    this.unitCommands = {\n      'Attitude': [\n        'move 3ยบ',\n        'move -3ยบ'\n      ],\n      'Magnetometer': [\n        'send readings'\n      ],\n      'Photosensor': [\n        'calibrate'\n      ]\n    };\n\n    $http.get('/api/commands/mine')\n    .then((response) => {\n      console.log(response);\n      this.myCommands = response.data;\n    });\n\n\n\n    $scope.submitCommand = function submitCommand(command) {\n      command.body = `${command.unit}:${command.body}`;\n      $http.post('/api/commands', command)\n      .then(function (response) {\n        console.log(response);\n      },\n      function (err) {\n        console.error(err);\n      });\n    };\n\n  });\n"]}